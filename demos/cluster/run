#!/bin/bash
set +x

BASE_DIR=`cd "$(dirname "$0")/../.."; pwd`
THIS_DIR=`cd "$(dirname "$0")"; basename $PWD`
cd "$BASE_DIR"

export SSHPASS=${SSHPASS:-vagrant}

cd demos
echo "`date`" > $THIS_DIR/started

# load functions
source functions

# if the last demo that executes wasn't 2, run it
# (this execution must be in a subshell)
{ [ -r last ] && [ "$(cat last)" = 2 ]; } || ( 2/run )

# go up machines if they are not running
{ isRunning dc1 && isRunning hc1 && isRunning hc2; } || vagrant up

# scripts/config
mkdir -p $THIS_DIR/scripts
cp ../scripts/config.sample $THIS_DIR/scripts/config
(cd $THIS_DIR/scripts; patch config < ../config.patch)

# configurations/jboss-eap-6.4/domain/configurations/domain.xml.patch
b=$THIS_DIR/configurations
o=/opt/rh/jboss-installer/installers
d=jboss-eap-6.4/domain/configuration
mkdir -p $b/$d && cd $_
sshpass -e scp -P 2200 root@localhost:$o/$d/domain.xml .
cp domain.xml{,.original}
vim -c "source ../../../../domain.xml.vim" domain.xml
diff -uNr domain.xml{.original,} > domain.xml.patch
rm -f domain.xml{.original,}

# configurations/jboss-eap-6.4/domain/configuration/host-slave.xml.no-backup.patch
sshpass -e scp -P 2200 root@localhost:$o/$d/host-slave.xml .
cp host-slave.xml{,.original}
vim -c "source ../../../../host-slave.xml.vim" host-slave.xml
diff -uNr host-slave.xml{.original,} > host-slave.xml.no-backup.app-1.patch
rm -f host-slave.xml{.original,}

cd "$BASE_DIR"

# configure variables
env=demos/$THIS_DIR/env
cat > $env <<EOF
#!/bin/bash

scripts=/opt/rh/jboss-installer/scripts
export DEMO=$THIS_DIR
export SERVER=localhost
export SSHPASS=$SSHPASS
dc1ssh() { sshpass -e ssh -p 2222 root@\$SERVER "\$@"; }
hc1ssh() { sshpass -e ssh -p 2200 root@\$SERVER "\$@"; }
hc2ssh() { sshpass -e ssh -p 2201 root@\$SERVER "\$@"; }
EOF
source $env
unset env

# stop dc1/hc1/hc2
for p in 22{22,00,01}
do
  echo "Stopping server running at port $p ..."
  sshpass -e ssh -p $p root@$SERVER $scripts/jboss-stop
done

# create installer
./jboss-installer.create

# update dc1
SSH_PORT=2222 ./jboss-installer.install
dc1ssh $scripts/jboss-install
dc1ssh $scripts/jboss-start

cd demos

# configure HornetQ using jboss-cli
dc1ssh $scripts/jboss-cli -c < $THIS_DIR/hornetq-configure.cli

# update hc1/ install hc2
for p in 220{0,1}; do SSH_PORT=$p ../jboss-installer.install; done
hc1ssh $scripts/jboss-install
hc1ssh $scripts/jboss-start
hc2ssh $scripts/jboss-install
hc2ssh $scripts/jboss-start

echo "`date`" > $THIS_DIR/finished
echo "$THIS_DIR" > last
